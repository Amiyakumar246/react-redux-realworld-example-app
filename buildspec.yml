version: 0.2

env:
   variables:
           IMAGE_REPO_NAME: "amiya-ecr"
           CONTAINER_NAME: "react"
   parameter-store:
           NODE_API: "/amiya/node_api"

phases:
  pre_build:
    commands:
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 421320058418.dkr.ecr.us-east-1.amazonaws.com
      - REPOSITORY_URI=421320058418.dkr.ecr.us-east-1.amazonaws.com/amiya-ecr
      - docker pull 421320058418.dkr.ecr.us-east-1.amazonaws.com/amiya-ecr:node
      - docker tag 421320058418.dkr.ecr.us-east-1.amazonaws.com/amiya-ecr:node node:alpine3.14
      - docker pull 421320058418.dkr.ecr.us-east-1.amazonaws.com/amiya-ecr:nginx
      - docker tag 421320058418.dkr.ecr.us-east-1.amazonaws.com/amiya-ecr:nginx nginx:alpine
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-10)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:         
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG 421320058418.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - docker push 421320058418.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

artifacts:
    files: imagedefinitions.json
